import{ah as t}from"./index-B8L1PXQk.js";const g={async getAllTags(){console.log("[FoodTagService] Fetching all food tags...");try{const r=await t.get("/food-tags");return console.log("[FoodTagService] Tags fetched successfully:",r.data),r.data}catch(r){throw console.error("[FoodTagService] Error fetching tags:",r),new Error("获取美食标签列表失败")}},async createTag(r){var a,o;console.log(`[FoodTagService] Creating tag: ${r}`);try{const e=await t.post("/food-tags",{name:r});return console.log("[FoodTagService] Tag created successfully:",e.data),e.data}catch(e){throw console.error("[FoodTagService] Error creating tag:",e),new Error(((o=(a=e.response)==null?void 0:a.data)==null?void 0:o.message)||"创建美食标签失败")}},async updateTag(r,a){var o,e;try{return(await t.put(`/food-tags/${r}`,{name:a})).data}catch(s){throw console.error(`[FoodTagService] Error updating tag ${r}:`,s),new Error(((e=(o=s.response)==null?void 0:o.data)==null?void 0:e.message)||`更新美食标签 ${r} 失败`)}},async deleteTag(r){var a,o;try{await t.delete(`/food-tags/${r}`)}catch(e){throw console.error(`[FoodTagService] Error deleting tag ${r}:`,e),new Error(((o=(a=e.response)==null?void 0:a.data)==null?void 0:o.message)||`删除美食标签 ${r} 失败`)}}};export{g as F};
